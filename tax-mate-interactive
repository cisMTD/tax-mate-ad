<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tax Mate – Interactive Ad</title>
  <!-- Tailwind via CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- React & ReactDOM -->
  <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
  <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
  <!-- Babel for JSX -->
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
  <!-- Framer Motion UMD -->
  <script src="https://unpkg.com/framer-motion@10.16.4/dist/framer-motion.umd.js"></script>
  <style>
    html, body, #root { height: 100%; }
  </style>
</head>
<body class="bg-gradient-to-br from-sky-50 to-emerald-50 antialiased">
  <div id="root"></div>

  <script type="text/babel">
    const { useState } = React;
    const { motion, AnimatePresence } = window.framerMotion;

    const Helmet = () => (
      <svg viewBox="0 0 24 24" className="w-10 h-10">
        <path d="M4 14a8 8 0 1116 0v2h-2v-2a6 6 0 10-12 0v2H4v-2z" fill="currentColor"/>
        <rect x="3" y="18" width="18" height="2.5" rx="1.25" fill="currentColor"/>
      </svg>
    );
    const Waves = () => (
      <svg viewBox="0 0 24 24" className="w-10 h-10">
        <path d="M2 12c2.5 0 2.5-2 5-2s2.5 2 5 2 2.5-2 5-2 2.5 2 5 2" stroke="currentColor" strokeWidth="2" fill="none" strokeLinecap="round"/>
      </svg>
    );
    const House = () => (
      <svg viewBox="0 0 24 24" className="w-10 h-10">
        <path d="M3 11l9-7 9 7v9a1 1 0 01-1 1h-5v-6H9v6H4a1 1 0 01-1-1v-9z" fill="currentColor"/>
      </svg>
    );
    const Clock = () => (
      <svg viewBox="0 0 24 24" className="w-10 h-10">
        <circle cx="12" cy="12" r="9" stroke="currentColor" strokeWidth="2" fill="none"/>
        <path d="M12 7v5l3 3" stroke="currentColor" strokeWidth="2" strokeLinecap="round"/>
      </svg>
    );

    const apps = [
      {
        name: "Tax Mate",
        tagline: "For construction industry tax reporting",
        Icon: Helmet,
        grad: "from-blue-500 to-emerald-500",
        text: "text-white",
        cta: "Get Construction App",
        href: "#construction"
      },
      {
        name: "ClientFlow Onboarding",
        tagline: "For client onboarding management",
        Icon: Waves,
        grad: "from-slate-900 to-slate-700",
        text: "text-white",
        cta: "Get ClientFlow",
        href: "#clientflow"
      },
      {
        name: "Tax Mate – Landlord Edition",
        tagline: "For landlord tax obligations",
        Icon: House,
        grad: "from-teal-600 to-emerald-600",
        text: "text-white",
        cta: "Get Landlord App",
        href: "#landlord"
      },
      {
        name: "Tax Mate – Time Tracker",
        tagline: "For tracking working hours",
        Icon: Clock,
        grad: "from-sky-600 to-teal-500",
        text: "text-white",
        cta: "Get Time Tracker",
        href: "#timetracker"
      }
    ];

    function InteractiveTaxMateAd() {
      const [layout, setLayout] = useState('fresh');
      const [active, setActive] = useState(0);

      return (
        <div className="min-h-screen w-full p-6 md:p-10">
          <div className="max-w-6xl mx-auto">
            <header className="flex flex-col md:flex-row md:items-end md:justify-between gap-4 mb-8">
              <div>
                <h1 className="text-4xl md:text-6xl font-extrabold tracking-tight">Simplify Your Taxes</h1>
                <p className="text-slate-600 mt-2 text-lg">Explore the Tax Mate suite — four focused apps that make admin disappear.</p>
              </div>
              <div className="flex items-center gap-3">
                <span className="text-sm font-medium text-slate-600">Layout:</span>
                <div className="inline-flex rounded-2xl shadow-sm overflow-hidden">
                  {['fresh','classic'].map((opt) => (
                    <button
                      key={opt}
                      onClick={() => setLayout(opt)}
                      className={"px-4 py-2 text-sm font-semibold transition " + (layout===opt ? "bg-slate-900 text-white" : "bg-white hover:bg-slate-100")}
                    >
                      {opt === 'fresh' ? 'Fresh' : 'Classic'}
                    </button>
                  ))}
                </div>
              </div>
            </header>

            <AnimatePresence mode="wait">
              {layout === 'fresh' ? (
                <motion.section
                  key="fresh"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: -20 }}
                  className="grid md:grid-cols-12 gap-6 mb-10"
                >
                  <div className="md:col-span-5">
                    <div className="bg-white/70 backdrop-blur rounded-3xl p-6 md:p-8 shadow-lg">
                      <h2 className="text-2xl font-bold mb-4">{apps[active].name}</h2>
                      <p className="text-slate-600 mb-6">{apps[active].tagline}</p>
                      <a href={apps[active].href} className="inline-flex items-center gap-2 px-5 py-3 rounded-2xl bg-slate-900 text-white font-semibold hover:opacity-90">
                        {apps[active].cta}
                        <span aria-hidden>→</span>
                      </a>
                      <div className="mt-6 text-sm text-slate-500">Tip: hover or tap a card to preview it.</div>
                    </div>
                  </div>
                  <div className="md:col-span-7 grid grid-cols-2 gap-6">
                    {apps.map((app, i) => (
                      <motion.button
                        key={app.name}
                        onMouseEnter={() => setActive(i)}
                        onFocus={() => setActive(i)}
                        onClick={() => setActive(i)}
                        whileHover={{ y: -6 }}
                        className={"relative text-left rounded-3xl p-5 md:p-6 shadow-lg bg-gradient-to-br " + app.grad + " " + (app.text ?? "text-white") + " focus:outline-none"}
                      >
                        <div className="flex items-center gap-3">
                          <div className="shrink-0 bg-white/15 rounded-2xl p-3">
                            <app.Icon />
                          </div>
                          <div>
                            <div className="text-base md:text-lg font-bold drop-shadow-sm">{app.name}</div>
                            <div className="text-sm md:text-base opacity-90 leading-snug">{app.tagline}</div>
                          </div>
                        </div>
                        {active === i && (
                          <motion.div layoutId="glow" className="absolute inset-0 rounded-3xl ring-4 ring-white/40 pointer-events-none" />
                        )}
                      </motion.button>
                    ))}
                  </div>
                </motion.section>
              ) : (
                <motion.section
                  key="classic"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  className="grid sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-10"
                >
                  {apps.map((app) => (
                    <div key={app.name} className={"group rounded-3xl overflow-hidden bg-gradient-to-br " + app.grad + " " + (app.text ?? "text-white") + " shadow-lg"}>
                      <div className="p-6">
                        <div className="flex items-center gap-3 mb-4">
                          <div className="bg-white/15 rounded-2xl p-3"><app.Icon /></div>
                          <h3 className="text-lg font-bold">{app.name}</h3>
                        </div>
                        <p className="opacity-95 leading-snug min-h-[48px]">{app.tagline}</p>
                        <a href={app.href} className="inline-flex items-center gap-2 mt-5 px-4 py-2 rounded-2xl bg-white/90 text-slate-900 font-semibold group-hover:bg-white transition">
                          {app.cta} <span aria-hidden>→</span>
                        </a>
                      </div>
                    </div>
                  ))}
                </motion.section>
              )}
            </AnimatePresence>

            <footer className="flex flex-col md:flex-row items-start md:items-center justify-between gap-4">
              <div className="text-slate-600 text-sm">
                Best for Facebook: export as an image, short video, or link this interactive page as a landing experience.
              </div>
              <div className="flex items-center gap-2">
                <button className="px-4 py-2 rounded-2xl bg-slate-900 text-white font-semibold">Contact Sales</button>
                <button className="px-4 py-2 rounded-2xl bg-white border font-semibold">Try the Demo</button>
              </div>
            </footer>
          </div>
        </div>
      );
    }

    const root = ReactDOM.createRoot(document.getElementById('root'));
    root.render(<InteractiveTaxMateAd />);
  </script>
</body>
</html>
